{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Flux",
  "scopeName": "source.flux",
  "fileTypes": ["fx"],
  "patterns": [
    {
      "name": "comment.line.double-slash.flux",
      "match": "//.*$",
      "comment": "Line comments"
    },
    {
      "name": "string.quoted.double.flux",
      "begin": "i\"",
      "end": "\"",
      "patterns": [
        {
          "name": "punctuation.section.interpolation.begin.flux",
          "match": "\\{",
          "push": "interpolation-scope"
        }
      ],
      "comment": "i-strings"
    },
    {
      "name": "string.quoted.double.flux",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.flux",
          "match": "\\\\[\\\\\"nrt]"
        }
      ],
      "comment": "Regular strings"
    },
    {
      "name": "keyword.control.flux",
      "match": "\\b(alignof|and|as|asm|assert|auto|break|bool|case|catch|char|contract|compt|const|continue|data|def|default|do|elif|else|extern|false|float|for|from|global|if|import|in|is|int|local|namespace|new|not|object|operator|or|private|public|return|signed|sizeof|struct|super|switch|this|throw|trait|true|try|typeof|union|unsigned|using|void|volatile|while|xor)\\b",
      "comment": "Keywords"
    },
    {
      "name": "storage.type.flux",
      "match": "\\b(struct|object|union|int|float|void|data|const|volatile|char|byte|i16|u16|i32|u32|i64|u64)\\b",
      "comment": "Types"
    },
    {
      "name": "entity.name.function.flux",
      "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()",
      "comment": "Functions"
    },
    {
      "name": "keyword.operator.special-method.flux",
      "match": "__[a-z]+__",
      "comment": "Special methods"
    },
    {
      "name": "constant.numeric.flux",
      "match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b",
      "comment": "Numbers"
    },
    {
      "name": "constant.numeric.hex.flux",
      "match": "\\b0x[0-9a-fA-F]+\\b",
      "comment": "Hex numbers"
    },
    {
      "name": "constant.numeric.binary.flux",
      "match": "\\b0b[01]+\\b",
      "comment": "Binary numbers"
    },
    {
      "name": "keyword.operator.flux",
      "match": "(\\+|\\-|\\*|\\/|\\%|\\=\\=|\\!\\=|\\>\\=|\\<\\=|\\>\\>|\\<\\<|\\&\\&|\\|\\||\\&|\\||\\^|\\~|\\!\\=|\\=|\\+|\\-|\\*\\*|\\:)",
      "comment": "Operators"
    },
    {
      "name": "storage.modifier.flux",
      "match": "\\b(signed|unsigned|const|volatile)\\b",
      "comment": "Type modifiers"
    },
    {
      "name": "keyword.control.import.flux",
      "match": "\\bimport\\b",
      "comment": "Import keyword"
    },
    {
      "name": "keyword.control.using.flux",
      "match": "\\busing\\b",
      "comment": "Using keyword"
    },
    {
      "name": "keyword.control.namespace.flux",
      "match": "\\bnamespace\\b",
      "comment": "Namespace keyword"
    },
    {
      "name": "keyword.control.trait.flux",
      "match": "\\btrait\\b",
      "comment": "Trait keyword"
    },
    {
      "name": "keyword.control.contract.flux",
      "match": "\\bcontract\\b",
      "comment": "Contract keyword"
    }
  ],
  "repository": {
    "interpolation-scope": {
      "name": "meta.interpolation.flux",
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "include": "source.flux"
        }
      ]
    }
  }
}